############ commandes de lancement de container ############

-| lancer un container détaché
docker run -d container_image

-| forward de port vers le container
docker run -p 8080:80 nginx // transférer le trafic du port 8080 vers le port 80 du conteneur (http://127.0.0.1:8080 nginx work)

############ commandes sur container ############

-| obtenir un shell sur son container
docket exec -ti ID_RETOURNÉ_LORS_DU_DOCKER_RUN bash

############ commandes générales ############

# vérifier les container déjà existant sur le système
docker ps -a
docker ps

# supprimer un container existant
docker rm -f (last_column_name)
docker rm ID_RETOURNÉ_LORS_DU_DOCKER_RUN

# lister les images sur le système
docker images

# rechercher une image dans le docker hub
docket search nom_image

# Run a command in a new container
docker run

# lancer un ou plusieurs containers arrêtés
docker start
docker stop
docker stop ID_RETOURNÉ_LORS_DU_DOCKER_RUN

# Construit un container depuis le dockerfile
docker build

docker pull – Pulls an image or a repository from a registry
docker push – Pushes an image or a repository to a registry
docker export – Exports a container’s filesystem as a tar archive
docker exec – Runs a command in a run-time container
docker search – Searches the Docker Hub for images
docker attach – Attaches to a running container
docker commit – Creates a new image from a container’s changes


# network in docker

- lister les modes réseaux
docker network ls
	- bridge
	Par défaut, il existe un network appelé bridge (l’interface docker0 quand vous faites un ifconfig). Ce network est créé en même temps que l’installation de docker. Il est toujours utilisé par défaut si vous ne spécifiez de réseaux au lancement d’un container (–network=custom_network).

	Dans ce réseau bridge créé par défaut, tous les containers peuvent communiquer entre eux, et donc se faire pirater par le premier container venu.

	- host

- creer un réseau 
docker network create	

############ Installer docker ############

sudo apt-get update

# Install packages to allow apt to use a repository over HTTPS
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

# Add Docker’s official GPG key:
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

# check if we have this key 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88
sudo apt-key fingerprint 0EBFCD88  

# setup stable docker repo
 sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"  

# update apt index
sudo apt-get update

# install latest version of Docker Engine - Community 
sudo apt-get install docker-ce docker-ce-cli containerd.io

# check if docker is installed correclty
sudo docker run hello-world

# configuration de l'utilisateur et de ses accès docker

-| création du groupe docker
sudo groupadd docker

-| ajout de l'utilisateur au groupe docker
sudo usermod -aG docker $USER

-| vérification que l'utilisateur peut lancer des dockers command sans sudo
docker run hello-world

