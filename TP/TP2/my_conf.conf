@version: 3.19
########################
# Sources
# d'où proviennent les log
########################
# Locale 
source s_src {
	system();
	internal();
};
# on se met en écoute sur les ip clientes pour récupérer leur log
# client alpine
#source s_alp { 
#  tcp( ip(172.18.10.11) port(1000));
#  udp( ip(172.18.10.11) port(1000));
#};
# client centos
#source s_cent {
#  tcp( ip(172.18.10.12) port(1000));
#  udp( ip(172.18.10.12) port(1000));
#};

########################
# Destinations
# Où seront stockés les logs des sources
########################

######### DEBIAN #######
# Destination pour les opérations reussies de la machine debian
destination log_local_success {
	file("/var/log/opOK.log"
	owner("root")
	group("root")
	perm(0777)
	create_dirs(yes));
};
# Destination pour les erreurs sudo locale de la machine debian
destination log_local_sudo_errors {
	file("/var/log/tp_error/debian/sudo_err.log"
	owner("root")
	group("root")
	perm(0777)
	create_dirs(yes));
};
destination log_local_su_errors {
	file("/var/log/tp_error/debian/su_err.log"
	owner("root")
	group("root")
	perm(0777)
	create_dirs(yes));
};
destination log_local_login_errors {
	file("/var/log/tp_error/debian/login_err.log"
	owner("root")
	group("root")
	perm(0777)
	create_dirs(yes));
};
destination log_local_ssh_errors {
	file("/var/log/tp_error/debian/ssh_err.log"
	owner("root")
	group("root")
	perm(0777)
	create_dirs(yes));
};

########################
# Filters
# Liste des règles permettant de filtrer les informations à retenir dans les logs
########################1

## SUCCESS
# permet de filtre les lignes commençant par "sudo, su, sshd ou login"
filter f_cmd_success_or_line { match("(^sudo)|(^su)|(^sshd)|(^login)"); };

# SUDO
# permet de filtrer les lignes ne contenant pas "command not allowed"
filter f_nsudo_command_not_allowed { match("^(?!.*command not allowed).*$"); };
# permet de filtrer les lignes ne contenant pas "authentication failure"
filter f_nsudo_authentication_failure { match("^(?!.*authentication failure).*$"); };
# permet de filtrer les lignes ne contenant pas "auth could not identify"
filter f_nsudo_auth_could_not_identify { match("^(?!.*auth could not identify).*$"); };

# SU
# permet de filtrer les lignes ne contenant pas "FAILED SU"
filter f_nsu_failed_su { match("^(?!.*FAILED SU).*$"); };

# SSH
# permet de filtrer les lignes ne contenant pas "Failed password"
filter f_nssh_failed_password { match("^(?!.*Failed password).*$"); };

# LOGIN
# permet de filtrer les lignes ne contenant pas "FAILED LOGIN"
filter f_nlogin_failed_login { match("^(?!.*FAILED LOGIN).*$"); };

# Filtres générales
# match("regexp" value("MESSAGE"));
# ne pas prendre les lignes commençant par systemd
filter f_nsystemd_line { match("^(?!.*system.d).*$"); };


## ERREURS

# Filtres sudo
# permet de filtrer les lignes commençant par "sudo[456]:" sudo
filter f_sudo_line { match("^(sudo)\[[0-9]+\]:")};
# ne pas prendre les lignes sudo ne commençant pas par sudo
filter f_nsudo_line { not match("^sudo"); };
# ne pas prendre les lignes sudo d'erreurs contenant conversation (pour sudo)
filter f_nsudo_conversation_line { match("^(?!.*conversation).*$"); };

# Filtres su
# permet de filtrer les lignes su commençant par su
filter f_su_line { match("^(su)\[[0-9]+\]:")};
# ne pas prendre les lignes su contenant "opened" (su ok)
filter f_nsu_opened { match("^(?!.*opened).*$"); };
#ne pas prendre les lignes su contenant "(to root)" (su ok)
filter f_nsu_to_root { match("^(?!.*(to root)).*$"); };
# ne pas prendre les lignes su contenant "session closed" (su exit ok)
filter f_nsu_session_closed { match("^(?!.*session closed).*$"); };

# Filtres locales
# permet de filtrer les lignes login commençant par "login" (login ok)
filter f_login_line { match("^login"); };
# permet de filtrer les lignes login ne contenant pas "session opened" (login ok)
filter f_nlogin_session_opened_line { match("^(?!.*session opened).*$"); };
# permet de filtrer les lignes ne contenant pas "ROOT LOGIN" (login ok)
filter f_nlogin_root_login_line { match("^(?!.*ROOT LOGIN).*$"); };
# ne pas prendre les lignes login ne contenant pas "session closed" (login exit ok)
filter f_nlogin_session_closed { match("^(?!.*session closed).*$"); };

# Filtres SSH
# permet de filtrer les lignes commençant par sshd
filter f_ssh_line { match("^sshd"); };
# permet de filtrer les lignes ne contenant pas "Connection closed by" (ssh ok)
filter f_nssh_connection_closed_by{ match("^(?!.*Connection closed by).*$"); };
# permet de filtrer les lignes ne contenant pas "Accepted password" (ssh ok)
filter f_nssh_accepted_password_by{ match("^(?!.*Accepted password).*$"); };
# permet de filtrer les lignes ne contenant pas "session opened" (ssh ok)
filter f_nssh_session_opened_for{ match("^(?!.*session opened for).*$"); };
# permet de filtrer les lignes ne contenant pas "session close" (ssh ok)
filter f_nssh_session_closed_for{ match("^(?!.*session closed for).*$"); };

########################
# Log paths
# Les lignes commentés par 2 ## ont été commenté par moi 
########################

# All messages send to a remote site
# log { source(s_src); destination(d_net); };

# Configuration des logs par rapport à mes filtres

## Success
log {
	source(s_src);
	filter(f_cmd_success_or_line);
	# SUDO 
	filter(f_nsudo_command_not_allowed);
	filter(f_nsudo_authentication_failure);
	filter(f_nsudo_conversation_line);
	filter(f_nsudo_auth_could_not_identify);
	# SU
	filter(f_nsu_failed_su);	
	# SSH
	filter(f_nssh_failed_password);	
	# LOGIN	
	filter(f_nlogin_failed_login);	
	destination(log_local_success);
};

## Erreurs
log { 
	source(s_src); 
	filter(f_sudo_line);
	filter(f_nsudo_conversation_line);  
	destination(log_local_sudo_errors); 
};
log { 
	source(s_src); 
	filter(f_su_line);
	filter(f_nsudo_line);
	filter(f_nsu_opened);
	filter(f_nsu_to_root); 
	filter(f_nsu_session_closed);
	destination(log_local_su_errors); 
};
log { 
	source(s_src); 
	filter(f_login_line); 
	filter(f_nlogin_session_opened_line);
	filter(f_nlogin_root_login_line);
	filter(f_nlogin_session_closed);
	destination(log_local_login_errors); 
};
log { 
	source(s_src);  
	filter(f_ssh_line); 
	filter(f_nssh_connection_closed_by);
	filter(f_nssh_accepted_password_by);
	filter(f_nssh_session_opened_for);
	filter(f_nssh_session_closed_for);
	destination(log_local_ssh_errors); 
};
